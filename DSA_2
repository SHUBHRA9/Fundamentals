Q1  : What is algorithm?
Ans : Algorithm is a step by step procedure, which defines a set of instructions to be executed in certain order to get the desired output.

Q2  : Why we need to do algorithm analysis?
Ans : A problem can be solved in more than one ways. So, many solution algorithms can be derived for a given problem. We analyze available algorithms to find and implement the best suitable algorithm.

Q3  : What are the criteria of algorithm analysis?
Ans : An algorithm are generally analyzed on two factors − time and space. That is, how much execution time and how much extra space required by the algorithm.

Q4  : What is asymptotic analysis of an algorithm?
Ans : Asymptotic analysis of an algorithm, refers to defining the mathematical boundation/framing of its run-time performance. Using asymptotic analysis, we can very well conclude the best case, 
average case and worst case scenario of an algorithm.

Q5  : What are asymptotic notations?
Ans : Asymptotic analysis can provide three levels of mathematical binding of execution time of an algorithm −
                * Best case is represented by Ω(n) notation.
                * Worst case is represented by Ο(n) notation.
                * Average case is represented by Θ(n) notation.

Q6  : What is linear data structure?
Ans : A linear data-structure has sequentially arranged data items. The next time can be located in the next memory address. It is stored and accessed in a sequential manner. 
      Array and list are example of linear data structure.

Q7  : What are common operations that can be performed on a data-structure?
Ans : The following operations are commonly performed on any data-structure −
                * Insertion − adding a data item
                * Deletion − removing a data item
                * Traversal − accessing and/or printing all data items
                * Searching − finding a particular data item
                * Sorting − arranging data items in a pre-defined sequence

Q8  : Briefly explain the approaches to develop algorithms.
Ans : There are three commonly used approaches to develop algorithms −
                * Greedy Approach − finding solution by choosing next best option
                * Divide and Conquer − diving the problem to a minimum possible sub-problem and solving them independently
                * Dynamic Programming − diving the problem to a minimum possible sub-problem and solving them combinedly
            
Q9  : What are some examples of divide and conquer algorithms?
Ans : The below given problems find their solution using divide and conquer algorithm approach −

                Merge Sort
                Quick Sort
                Binary Search
                Strassen's Matrix Multiplication
                Closest pair (points)

Q10 : What is a linked-list?
Ans : A linked-list is a list of data-items connected with links i.e. pointers or references. Most modern high-level programming language does not provide the feature of directly accessing memory location, therefore, 
linked-list are not supported in them or available in form of inbuilt functions.
